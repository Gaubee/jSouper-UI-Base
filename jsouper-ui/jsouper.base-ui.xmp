<xmp type='template' name="form.checkbox">
    <div bind-class="{{class}}">
        {{#if label}}
        <label>{{label}}</label>
        {{/if}} {{#each items}}
        <div class="input-control checkbox" data-role="input-control">
            <label>
                <input type="checkbox" bind-name="{{$PARENT.name}}" bind-value="{{value}}" bind-checked="{{selected}}" bind-form="{{'selected'}}" />
                <span class="check"></span>
                {{key}}
            </label>
        </div>
        {{/each}}
    </div>
</xmp>
<script type="text/vm" name="form.checkbox">
(function() {
    function initVM(vm) {
        var model = vm.model;
        var data = model._database || {};
        var value = data.value;
        var valueObserver = Model.Observer(function getter(key, old_value, currentKey) {
            var formatKey = (currentKey === "value" ? "" : currentKey.substr(0, currentKey.length - 5 /*currentKey.length-'value'.length*/ )) + "items";
            var items = jSouper.$.s(this.get(formatKey));
            var result = [];
            jSouper.$.E(items, function(item, index) {
                if (item.selected) {
                    result.push(item.value);
                }
            });
            return result;
        }, function setter(key, value, currentKey) {
            var formatKey = (currentKey === "value" ? "" : currentKey.substr(0, currentKey.length - 5 /*currentKey.length-'value'.length*/ )) + "items";
            var items = jSouper.$.s(this.get(formatKey));
            jSouper.$.E(jSouper.$.s(value), function(item, index) {
                for (var i = 0, len = items.length; i < len; i += 1) {
                    if (items[i].selected = (items[i].value === item)) {
                        //不做多余的判断
                        items.splice(i, 1);
                        i -= 1;
                        len -= 1;
                    }
                }
            })
            this.touchOff(formatKey);
        });
        data.value = valueObserver;
        model.set("value", value);
        return value;
    };
    return initVM;
}());
</script>

<xmp type='template' name='form.number'>
    <div bind-class="{{class}}">
        {{#if label}}
        <label>{{label}}</label>
        {{/if}}
        <div class="input-control number" data-role="input-control">
            <input type="text" placeholder="{{placeholder}}" bind-value="{{value}}" bind-form="{{'value'}}">
        </div>
    </div>
</xmp>
<script type="text/vm" name="form.number">
(function(argument) {
    function initVM(vm) {
        jSouper.initFormVM(vm);
    }
    return initVM;
}());
</script>


<xmp type='template' name='form.password'>
	<div bind-class="{{class}}">
		{{#if label}}
		<label>{{label}}</label>
		{{/if}}
	    <div class="input-control password" data-role="input-control">
	        <input type="password" placeholder="{{placeholder}}" bind-value="{{value}}" bind-form="{{'value'}}">
	        <button class="btn-clear" tabindex="-1"></button>
	    </div>
    </div>
</xmp>


<xmp type='template' name="form.radio">
    <div bind-class="{{class}}">
	{{#if label}}
	<label>{{label}}</label>
	{{/if}}
    {{#each items}}
        <div class="input-control radio default-style" data-role="input-control">
            <label>
                <input type="radio" bind-name="{{$PARENT.name}}" bind-value="{{value}}" bind-checked="{{$PARENT.value}}" bind-form="{{'$PARENT.value'}}"/>
                <span class="check"></span>
                {{key}}
            </label>
        </div>
    {{/each}}
    </div>
</xmp>


<xmp type='template' name='form.select'>
    <div bind-class="{{class}}">
		{{#if label}}
		<label>{{label}}</label>
		{{/if}}
		<div class="input-control select">
		    <select bind-name="{{name}}" bind-value="{{value}}" bind-form="{{'value'}}" bind-multiple="{{multiple}}" size="{{size}}" >
			    {{#each items}}
					<option bind-value="{{value}}">{{key}}</option>
				{{/each}}
		    </select>
		</div>
	</div>
</xmp>

<xmp type='template' name='form.submit'>
	<input type="submit" value="{{value}}">
</xmp>

<xmp type='template' name='form.text'>
    <jsouperFormUi id="{{__system.attrs.id}}" bind-class="{{class}}">
        {{#if label}}
        <label>{{label}}</label>
        {{/if}}
        <inputTextWrap class="{{#if disabled}} disabledMask{{/if}}{{#if __system.attrs.isFocus}} focusInput{{/if}}{{#if __system.attrs.isSubmitted&&__system.attrs.isSubmitted}} patternError{{/if}}">
            <!-- placeholder = "{{placeholder}}" -->
            {{#layout 'form.text.placeholder','$THIS',placeholder&&(!value)}}
            <input type="text" class="jsouper-ui-input-text" value="{{value}}" accessKey="{{accessKey}}" alt="{{alt}}" defaultValue="{{defaultValue}}" disabled="{{disabled}}" id="{{id}}" maxLength="{{maxLength}}" name="{{name}}" readOnly="{{readOnly}}" size="{{size}}" tabIndex="{{tabIndex}}" autocomplete="{{#if __system.attrs.autocomplete}}on{{#else}}off{{/if}}" input="{{'value'}}">
            {{#layout 'form.text.autocomplete','autocomplete',__system.attrs.close_sys_ac&&value&&__system.attrs.isFocus}}
            <!-- 这边绑定pattern，因为pattern_error属性依赖于pattern内部的触发，所以需要绑定'pattern'而不是'$THIS'来进行一次主动地触发getter函数，从而生成依赖，否则就得手动运行一次getter -->
            {{#layout 'form.text.pattern','pattern',__system.attrs.pattern_error&&__system.attrs.isFocus&&__system.attrs.isSubmitted}}
        </inputTextWrap>
    </jsouperFormUi>
</xmp>
<xmp type='template' name='form.text.placeholder'>
    <placeholder>{{placeholder}}</placeholder>
</xmp>
<xmp type='template' name='form.text.autocomplete'>
    <autocomplete>
        <autocompleteWrap>
            {{#each $THIS}}
            <autocompleteItem event-mousedown="{{'$PARENT.$PARENT.__system.events.autocomplete.click'}}">{{$THIS}}</autocompleteItem>
            {{/each}}
        </autocompleteWrap>
    </autocomplete>
</xmp>
<xmp type='template' name='form.text.pattern'>
    <pattern>
        <patternWrap event-mousedown="{{'$PARENT.__system.events.click.pattern'}}">
            <patternHead>
                <patternArrow>◇</patternArrow>
                <patternArrowMark>◆</patternArrowMark>
                <patternIcon>!</patternIcon>
                <patternTitle>请与所请求的格式保持一致。</patternTitle>
            </patternHead>
            <patternContent>
                {{$THIS}}
            </patternContent>
        </patternWrap>
    </pattern>
</xmp>

<!--
TODO:+disable
TODO:+event循环绑定
-->
<xmp type='template' name="formset">
	{{#each $THIS}}
		{{#layout ('form.'+type),'$THIS'}} 
	{{/each}}
</xmp>